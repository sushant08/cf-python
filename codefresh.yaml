version: "1.0"
stages:
  - "clone"
  - "tag-test"
  - "testimage"
  - "test"
  - "build"
  - "integration"
  - "push"
  - "deploy"
steps:
  main_clone:
    type: "git-clone"
    description: "Cloning main repository..."
    repo: "sushant08/cf-python"
    revision: "${{CF_BRANCH}}"
    stage: "clone"
  Tagtest:
    title: Variable example
    image: alpine
    stage: 'tag-test'
    commands:
      - echo $CF_REVISION
      - echo $CF_REVISION > ${{CF_VOLUME_PATH}}/version
      - cat ${{CF_VOLUME_PATH}}/version
      - ls -l ${{CF_VOLUME_PATH}}
  UnitTestDockerImage:
    title: Building Test image
    type: build
    stage: 'testimage'
    image_name: test-image
    tag: 'master'
    dockerfile: Dockerfile.test
  UnitTests:
    title: Running Unit tests
    stage: test
    image: '${{UnitTestDockerImage}}'
    commands:
      - python test_basic.py
  build:
    title: "Building Docker Image"
    type: "build"
    image_name: "sushant08/cf-python"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "Dockerfile"
    stage: "build"
  approval_for_push:
    type: "pending-approval"
    title: "Should we run push"
    when:
      branch:
        only:
          - "master"
    stage: "push"
  parallel_push:
    type: "parallel"
    steps:
      annotate_build:
        title: "Annotating Build"
        image: "${{build}}"
        working_directory: "IMAGE_WORK_DIR"
        commands:
          - "echo Annotating Build..."
        on_success:
          metadata:
            set:
              - ${{build.imageId}}:
                  - CF_QUALITY: true
        on_error:
          metadata:
            set:
              - ${{build.imageId}}:
                  - CF_QUALITY: false
      push:
        title: "Pushing image to cfcr"
        type: "push"
        image_name: "sushant08/cf-python"
        registry: "cfcr"
        candidate: "${{build}}"
        tags:
          - "${{CF_BRANCH_TAG_NORMALIZED}}"
          - "${{CF_REVISION}}"
    stage: "push"
  
  deploy_ecs:
    image: codefresh/cf-deploy-ecs 
    commands:
      - cfecs-update --image-name sushant08/cf-python --image-tag '${{CF_BRANCH_TAG_NORMALIZED}}' us-east-1 test cf-service
    environment:
      - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
      - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
    when:
      branch:
        only:
          - master
    stage: "deploy"
